var CategoryController=function(CategoryModel,$stateParams){
	this.model=CategoryModel.model;
	
	CategoryModel.getCategories().then(function(){;
		CategoryModel.getCategory($stateParams.id);
	});
}
var CategoryModel=function($http,$q){
	this.$http=$http;
	this.$q=$q;
	this.url="data/categories-data.js";
	this.model={};


}

CategoryModel.prototype.getCategories=function(){
	var deferred=this.$q.defer();
	var service=this;
	this.$http.get(this.url)
		.success(function(data){
			deferred.resolve(service.transformResponse(data));
	});
	return deferred.promise;

};

CategoryModel.prototype.transformResponse=function(categoryObj){
	var service=this;
	var categories=[];
	angular.forEach(categoryObj.categories,function(ob,key){
		categories.push(new category(ob));	
	});
	this.model.categories=categories;

};

CategoryModel.prototype.getCategory=function(id){
	var service=this;
	angular.forEach(service.model.categories,function(ob,key){
		if(typeof ob!=="undefined" && ob.id == id)
			service.model.selectedCategory=ob;
	});
};

var category=function(data){
	    if(typeof data !== "undefined"){
		this.id=data.id;
		this.image=data.image;
		this.category=data.category;
	    }

};
var HomeController=function(){



}
var ProductController=function(ProductCatalog,$stateParams){
this.model=ProductCatalog.model;
ProductCatalog.getSelectedProduct($stateParams.id);

	this.addToCart=function(){
		ProductCatalog.addToCart();
	}
}
var ProductCatalogController=function(ProductCatalog,$stateParams){
this.model=ProductCatalog.model;
ProductCatalog.getProducts().then(function(){
	ProductCatalog.getProductList($stateParams.id+$stateParams.type);
});

};
var ProductCatalog=function($http,$q,shoppingBasketService){
	this.$http=$http;
	this.$q=$q;
	this.url="data/products-data.js";
	this.model={};
	this.shoppingBasketService=shoppingBasketService;

};

ProductCatalog.prototype.getProducts=function(){
	var deferred=this.$q.defer();
	var service=this;
	this.$http.get(this.url)
		.success(function(data){
			deferred.resolve(service.transformResponse(data));
	});
	return deferred.promise;
};
ProductCatalog.prototype.transformResponse=function(productsObj){
	var service=this;
	var products=[];
	angular.forEach(productsObj.ProductList,function(ob,key){
		products.push(new product(ob));	
	});
	this.model.productList=products;

};

ProductCatalog.prototype.getProductList=function(productId){
	var service=this;
	angular.forEach(this.model.productList,function(ob,key){
		if(productId === ob.productId)
			service.model.selectedProducts=ob.products;	
	});

};
ProductCatalog.prototype.getSelectedProduct=function(id){
	var service=this;
	angular.forEach(this.model.selectedProducts,function(ob,key){
		if(key === Number(id))
			service.model.selectedProduct=ob;	
	});


};
ProductCatalog.prototype.addToCart=function(){
	this.shoppingBasketService.addToCart(this.model.selectedProduct);

};
var product=function(obj){
	if(typeof obj!=="undefined"){
		this.productId=obj.id+obj.type;
		this.products=obj.Products;
		
		
	}
}
function shoppingBasket(shoppingBasketService){

return{
	restrict:'A',
	scope:{
		
	},
	templateUrl:'templates/shoppingBasket.html',
	link:function($scope, element,attributes){
		 $scope.basket=shoppingBasketService.basket;
		 
		 $scope.removeItem=function(index){
			shoppingBasketService.removeItem(index);
			$scope.products=shoppingBasketService.products;
		}
	}
}

}
var shoppingBasketService=function(){
	this.basket={};
	this.products=[];
	this.total=0;
	
};

shoppingBasketService.prototype.addToCart=function(obj){
	this.products.push(obj);
	this.total+=obj.price;
	this.basket.products=this.products;
	this.basket.total=this.total;

};

shoppingBasketService.prototype.removeItem=function(index){
	var tempArray=[];
	var total=0;
	angular.forEach(this.products,function(ob,key){
		
		if(key !== index){
			tempArray.push(ob);
			total+=ob.price;
		}
	});
	this.basket.products=tempArray;
	this.basket.total=total;

};
angular.module('ShoppingBasket',[])
.service('shoppingBasketService',shoppingBasketService)
.directive('shoppingBasket',shoppingBasket);
angular.module('ClothingFashionApp.Categories',[])
.service('CategoryModel',CategoryModel)
.controller('CategoryController',CategoryController);

angular.module('ClothingFashionApp.home',[])
.controller('HomeController',HomeController);

angular.module('ClothingFashionApp.Products',['ui.router'])
.config(function($stateProvider, $urlRouterProvider) {
    
    $urlRouterProvider.otherwise('/products');
    
    $stateProvider
        .state('products', {
            url: '/products/:id/:type',
            templateUrl: 'templates/Products.html'
        })
		.state('product', {
            url: '/product/:id',
            templateUrl: 'templates/Product.html'
        })
       
})
.service("ProductCatalog",ProductCatalog)
.controller("ProductCatalogController",ProductCatalogController)
.controller("ProductController",ProductController);

// Intializing Quiz app
var ClothingFashionApp=angular.module('ClothingFashion', ['ui.router',
'ClothingFashionApp.home',
'ClothingFashionApp.Categories',
'ClothingFashionApp.Products',
'ShoppingBasket'
]);
// Ui router for routing to different stages
ClothingFashionApp.config(function($stateProvider, $urlRouterProvider) {
    
    $urlRouterProvider.otherwise('/home');
    
    $stateProvider
        .state('home', {
            url: '/home',
            templateUrl: 'templates/home.html'
        })
      	 .state('categories', {
            url: '/categories/:id',
            templateUrl: 'templates/categories.html'
        })	
        
});


//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpZXMtbW9kdWxlL2NvbnRyb2xsZXIvY2F0ZWdvcnlDb250cm9sbGVyLmpzIiwiQ2F0ZWdvcmllcy1tb2R1bGUvbW9kZWxzL0NhdGVnb3J5TW9kZWwuanMiLCJGYXNoaW9uSG9tZS1tb2R1bGUvY29udHJvbGxlcnMvSG9tZUNvbnRyb2xsZXIuanMiLCJQcm9kdWN0cy1tb2R1bGUvY29udHJvbGxlci9Qcm9kdWN0Q29udHJvbGxlci5qcyIsIlByb2R1Y3RzLW1vZHVsZS9jb250cm9sbGVyL1Byb2R1Y3RzQ29udHJvbGxlci5qcyIsIlByb2R1Y3RzLW1vZHVsZS9tb2RlbHMvUHJvZHVjdHNDYXRhbG9nLmpzIiwic2hvcHBpbmdiYXNrZXQtbW9kdWxlL2RpcmVjdGl2ZXMvc2hvcHBpbmdCYXNrZXQuanMiLCJzaG9wcGluZ2Jhc2tldC1tb2R1bGUvc2VydmljZXMvc2hvcHBpbmdCYXNrZXRTZXJ2aWNlLmpzIiwic2hvcHBpbmdiYXNrZXQtbW9kdWxlL2FwcC5qcyIsIkNhdGVnb3JpZXMtbW9kdWxlL2FwcC5qcyIsIkZhc2hpb25Ib21lLW1vZHVsZS9hcHAuanMiLCJQcm9kdWN0cy1tb2R1bGUvYXBwLmpzIiwiYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM3Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3hEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDNUJBO0FBQ0E7QUFDQTtBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FDSEE7QUFDQTtBQUNBO0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIENhdGVnb3J5Q29udHJvbGxlcj1mdW5jdGlvbihDYXRlZ29yeU1vZGVsLCRzdGF0ZVBhcmFtcyl7XHJcblx0dGhpcy5tb2RlbD1DYXRlZ29yeU1vZGVsLm1vZGVsO1xyXG5cdFxyXG5cdENhdGVnb3J5TW9kZWwuZ2V0Q2F0ZWdvcmllcygpLnRoZW4oZnVuY3Rpb24oKXs7XHJcblx0XHRDYXRlZ29yeU1vZGVsLmdldENhdGVnb3J5KCRzdGF0ZVBhcmFtcy5pZCk7XHJcblx0fSk7XHJcbn0iLCJ2YXIgQ2F0ZWdvcnlNb2RlbD1mdW5jdGlvbigkaHR0cCwkcSl7XHJcblx0dGhpcy4kaHR0cD0kaHR0cDtcclxuXHR0aGlzLiRxPSRxO1xyXG5cdHRoaXMudXJsPVwiZGF0YS9jYXRlZ29yaWVzLWRhdGEuanNcIjtcclxuXHR0aGlzLm1vZGVsPXt9O1xyXG5cclxuXHJcbn1cclxuXHJcbkNhdGVnb3J5TW9kZWwucHJvdG90eXBlLmdldENhdGVnb3JpZXM9ZnVuY3Rpb24oKXtcclxuXHR2YXIgZGVmZXJyZWQ9dGhpcy4kcS5kZWZlcigpO1xyXG5cdHZhciBzZXJ2aWNlPXRoaXM7XHJcblx0dGhpcy4kaHR0cC5nZXQodGhpcy51cmwpXHJcblx0XHQuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShzZXJ2aWNlLnRyYW5zZm9ybVJlc3BvbnNlKGRhdGEpKTtcclxuXHR9KTtcclxuXHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuXHJcbn07XHJcblxyXG5DYXRlZ29yeU1vZGVsLnByb3RvdHlwZS50cmFuc2Zvcm1SZXNwb25zZT1mdW5jdGlvbihjYXRlZ29yeU9iail7XHJcblx0dmFyIHNlcnZpY2U9dGhpcztcclxuXHR2YXIgY2F0ZWdvcmllcz1bXTtcclxuXHRhbmd1bGFyLmZvckVhY2goY2F0ZWdvcnlPYmouY2F0ZWdvcmllcyxmdW5jdGlvbihvYixrZXkpe1xyXG5cdFx0Y2F0ZWdvcmllcy5wdXNoKG5ldyBjYXRlZ29yeShvYikpO1x0XHJcblx0fSk7XHJcblx0dGhpcy5tb2RlbC5jYXRlZ29yaWVzPWNhdGVnb3JpZXM7XHJcblxyXG59O1xyXG5cclxuQ2F0ZWdvcnlNb2RlbC5wcm90b3R5cGUuZ2V0Q2F0ZWdvcnk9ZnVuY3Rpb24oaWQpe1xyXG5cdHZhciBzZXJ2aWNlPXRoaXM7XHJcblx0YW5ndWxhci5mb3JFYWNoKHNlcnZpY2UubW9kZWwuY2F0ZWdvcmllcyxmdW5jdGlvbihvYixrZXkpe1xyXG5cdFx0aWYodHlwZW9mIG9iIT09XCJ1bmRlZmluZWRcIiAmJiBvYi5pZCA9PSBpZClcclxuXHRcdFx0c2VydmljZS5tb2RlbC5zZWxlY3RlZENhdGVnb3J5PW9iO1xyXG5cdH0pO1xyXG59O1xyXG5cclxudmFyIGNhdGVnb3J5PWZ1bmN0aW9uKGRhdGEpe1xyXG5cdCAgICBpZih0eXBlb2YgZGF0YSAhPT0gXCJ1bmRlZmluZWRcIil7XHJcblx0XHR0aGlzLmlkPWRhdGEuaWQ7XHJcblx0XHR0aGlzLmltYWdlPWRhdGEuaW1hZ2U7XHJcblx0XHR0aGlzLmNhdGVnb3J5PWRhdGEuY2F0ZWdvcnk7XHJcblx0ICAgIH1cclxuXHJcbn07IiwidmFyIEhvbWVDb250cm9sbGVyPWZ1bmN0aW9uKCl7XHJcblxyXG5cclxuXHJcbn0iLCJ2YXIgUHJvZHVjdENvbnRyb2xsZXI9ZnVuY3Rpb24oUHJvZHVjdENhdGFsb2csJHN0YXRlUGFyYW1zKXtcclxudGhpcy5tb2RlbD1Qcm9kdWN0Q2F0YWxvZy5tb2RlbDtcclxuUHJvZHVjdENhdGFsb2cuZ2V0U2VsZWN0ZWRQcm9kdWN0KCRzdGF0ZVBhcmFtcy5pZCk7XHJcblxyXG5cdHRoaXMuYWRkVG9DYXJ0PWZ1bmN0aW9uKCl7XHJcblx0XHRQcm9kdWN0Q2F0YWxvZy5hZGRUb0NhcnQoKTtcclxuXHR9XHJcbn0iLCJ2YXIgUHJvZHVjdENhdGFsb2dDb250cm9sbGVyPWZ1bmN0aW9uKFByb2R1Y3RDYXRhbG9nLCRzdGF0ZVBhcmFtcyl7XHJcbnRoaXMubW9kZWw9UHJvZHVjdENhdGFsb2cubW9kZWw7XHJcblByb2R1Y3RDYXRhbG9nLmdldFByb2R1Y3RzKCkudGhlbihmdW5jdGlvbigpe1xyXG5cdFByb2R1Y3RDYXRhbG9nLmdldFByb2R1Y3RMaXN0KCRzdGF0ZVBhcmFtcy5pZCskc3RhdGVQYXJhbXMudHlwZSk7XHJcbn0pO1xyXG5cclxufTsiLCJ2YXIgUHJvZHVjdENhdGFsb2c9ZnVuY3Rpb24oJGh0dHAsJHEsc2hvcHBpbmdCYXNrZXRTZXJ2aWNlKXtcclxuXHR0aGlzLiRodHRwPSRodHRwO1xyXG5cdHRoaXMuJHE9JHE7XHJcblx0dGhpcy51cmw9XCJkYXRhL3Byb2R1Y3RzLWRhdGEuanNcIjtcclxuXHR0aGlzLm1vZGVsPXt9O1xyXG5cdHRoaXMuc2hvcHBpbmdCYXNrZXRTZXJ2aWNlPXNob3BwaW5nQmFza2V0U2VydmljZTtcclxuXHJcbn07XHJcblxyXG5Qcm9kdWN0Q2F0YWxvZy5wcm90b3R5cGUuZ2V0UHJvZHVjdHM9ZnVuY3Rpb24oKXtcclxuXHR2YXIgZGVmZXJyZWQ9dGhpcy4kcS5kZWZlcigpO1xyXG5cdHZhciBzZXJ2aWNlPXRoaXM7XHJcblx0dGhpcy4kaHR0cC5nZXQodGhpcy51cmwpXHJcblx0XHQuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShzZXJ2aWNlLnRyYW5zZm9ybVJlc3BvbnNlKGRhdGEpKTtcclxuXHR9KTtcclxuXHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxufTtcclxuUHJvZHVjdENhdGFsb2cucHJvdG90eXBlLnRyYW5zZm9ybVJlc3BvbnNlPWZ1bmN0aW9uKHByb2R1Y3RzT2JqKXtcclxuXHR2YXIgc2VydmljZT10aGlzO1xyXG5cdHZhciBwcm9kdWN0cz1bXTtcclxuXHRhbmd1bGFyLmZvckVhY2gocHJvZHVjdHNPYmouUHJvZHVjdExpc3QsZnVuY3Rpb24ob2Isa2V5KXtcclxuXHRcdHByb2R1Y3RzLnB1c2gobmV3IHByb2R1Y3Qob2IpKTtcdFxyXG5cdH0pO1xyXG5cdHRoaXMubW9kZWwucHJvZHVjdExpc3Q9cHJvZHVjdHM7XHJcblxyXG59O1xyXG5cclxuUHJvZHVjdENhdGFsb2cucHJvdG90eXBlLmdldFByb2R1Y3RMaXN0PWZ1bmN0aW9uKHByb2R1Y3RJZCl7XHJcblx0dmFyIHNlcnZpY2U9dGhpcztcclxuXHRhbmd1bGFyLmZvckVhY2godGhpcy5tb2RlbC5wcm9kdWN0TGlzdCxmdW5jdGlvbihvYixrZXkpe1xyXG5cdFx0aWYocHJvZHVjdElkID09PSBvYi5wcm9kdWN0SWQpXHJcblx0XHRcdHNlcnZpY2UubW9kZWwuc2VsZWN0ZWRQcm9kdWN0cz1vYi5wcm9kdWN0cztcdFxyXG5cdH0pO1xyXG5cclxufTtcclxuUHJvZHVjdENhdGFsb2cucHJvdG90eXBlLmdldFNlbGVjdGVkUHJvZHVjdD1mdW5jdGlvbihpZCl7XHJcblx0dmFyIHNlcnZpY2U9dGhpcztcclxuXHRhbmd1bGFyLmZvckVhY2godGhpcy5tb2RlbC5zZWxlY3RlZFByb2R1Y3RzLGZ1bmN0aW9uKG9iLGtleSl7XHJcblx0XHRpZihrZXkgPT09IE51bWJlcihpZCkpXHJcblx0XHRcdHNlcnZpY2UubW9kZWwuc2VsZWN0ZWRQcm9kdWN0PW9iO1x0XHJcblx0fSk7XHJcblxyXG5cclxufTtcclxuUHJvZHVjdENhdGFsb2cucHJvdG90eXBlLmFkZFRvQ2FydD1mdW5jdGlvbigpe1xyXG5cdHRoaXMuc2hvcHBpbmdCYXNrZXRTZXJ2aWNlLmFkZFRvQ2FydCh0aGlzLm1vZGVsLnNlbGVjdGVkUHJvZHVjdCk7XHJcblxyXG59O1xyXG52YXIgcHJvZHVjdD1mdW5jdGlvbihvYmope1xyXG5cdGlmKHR5cGVvZiBvYmohPT1cInVuZGVmaW5lZFwiKXtcclxuXHRcdHRoaXMucHJvZHVjdElkPW9iai5pZCtvYmoudHlwZTtcclxuXHRcdHRoaXMucHJvZHVjdHM9b2JqLlByb2R1Y3RzO1xyXG5cdFx0XHJcblx0XHRcclxuXHR9XHJcbn0iLCJmdW5jdGlvbiBzaG9wcGluZ0Jhc2tldChzaG9wcGluZ0Jhc2tldFNlcnZpY2Upe1xyXG5cclxucmV0dXJue1xyXG5cdHJlc3RyaWN0OidBJyxcclxuXHRzY29wZTp7XHJcblx0XHRcclxuXHR9LFxyXG5cdHRlbXBsYXRlVXJsOid0ZW1wbGF0ZXMvc2hvcHBpbmdCYXNrZXQuaHRtbCcsXHJcblx0bGluazpmdW5jdGlvbigkc2NvcGUsIGVsZW1lbnQsYXR0cmlidXRlcyl7XHJcblx0XHQgJHNjb3BlLmJhc2tldD1zaG9wcGluZ0Jhc2tldFNlcnZpY2UuYmFza2V0O1xyXG5cdFx0IFxyXG5cdFx0ICRzY29wZS5yZW1vdmVJdGVtPWZ1bmN0aW9uKGluZGV4KXtcclxuXHRcdFx0c2hvcHBpbmdCYXNrZXRTZXJ2aWNlLnJlbW92ZUl0ZW0oaW5kZXgpO1xyXG5cdFx0XHQkc2NvcGUucHJvZHVjdHM9c2hvcHBpbmdCYXNrZXRTZXJ2aWNlLnByb2R1Y3RzO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxufSIsInZhciBzaG9wcGluZ0Jhc2tldFNlcnZpY2U9ZnVuY3Rpb24oKXtcclxuXHR0aGlzLmJhc2tldD17fTtcclxuXHR0aGlzLnByb2R1Y3RzPVtdO1xyXG5cdHRoaXMudG90YWw9MDtcclxuXHRcclxufTtcclxuXHJcbnNob3BwaW5nQmFza2V0U2VydmljZS5wcm90b3R5cGUuYWRkVG9DYXJ0PWZ1bmN0aW9uKG9iail7XHJcblx0dGhpcy5wcm9kdWN0cy5wdXNoKG9iaik7XHJcblx0dGhpcy50b3RhbCs9b2JqLnByaWNlO1xyXG5cdHRoaXMuYmFza2V0LnByb2R1Y3RzPXRoaXMucHJvZHVjdHM7XHJcblx0dGhpcy5iYXNrZXQudG90YWw9dGhpcy50b3RhbDtcclxuXHJcbn07XHJcblxyXG5zaG9wcGluZ0Jhc2tldFNlcnZpY2UucHJvdG90eXBlLnJlbW92ZUl0ZW09ZnVuY3Rpb24oaW5kZXgpe1xyXG5cdHZhciB0ZW1wQXJyYXk9W107XHJcblx0dmFyIHRvdGFsPTA7XHJcblx0YW5ndWxhci5mb3JFYWNoKHRoaXMucHJvZHVjdHMsZnVuY3Rpb24ob2Isa2V5KXtcclxuXHRcdFxyXG5cdFx0aWYoa2V5ICE9PSBpbmRleCl7XHJcblx0XHRcdHRlbXBBcnJheS5wdXNoKG9iKTtcclxuXHRcdFx0dG90YWwrPW9iLnByaWNlO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdHRoaXMuYmFza2V0LnByb2R1Y3RzPXRlbXBBcnJheTtcclxuXHR0aGlzLmJhc2tldC50b3RhbD10b3RhbDtcclxuXHJcbn07IiwiYW5ndWxhci5tb2R1bGUoJ1Nob3BwaW5nQmFza2V0JyxbXSlcclxuLnNlcnZpY2UoJ3Nob3BwaW5nQmFza2V0U2VydmljZScsc2hvcHBpbmdCYXNrZXRTZXJ2aWNlKVxyXG4uZGlyZWN0aXZlKCdzaG9wcGluZ0Jhc2tldCcsc2hvcHBpbmdCYXNrZXQpOyIsImFuZ3VsYXIubW9kdWxlKCdDbG90aGluZ0Zhc2hpb25BcHAuQ2F0ZWdvcmllcycsW10pXG4uc2VydmljZSgnQ2F0ZWdvcnlNb2RlbCcsQ2F0ZWdvcnlNb2RlbClcbi5jb250cm9sbGVyKCdDYXRlZ29yeUNvbnRyb2xsZXInLENhdGVnb3J5Q29udHJvbGxlcik7XG4iLCJhbmd1bGFyLm1vZHVsZSgnQ2xvdGhpbmdGYXNoaW9uQXBwLmhvbWUnLFtdKVxuLmNvbnRyb2xsZXIoJ0hvbWVDb250cm9sbGVyJyxIb21lQ29udHJvbGxlcik7XG4iLCJhbmd1bGFyLm1vZHVsZSgnQ2xvdGhpbmdGYXNoaW9uQXBwLlByb2R1Y3RzJyxbJ3VpLnJvdXRlciddKVxuLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG4gICAgXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL3Byb2R1Y3RzJyk7XG4gICAgXG4gICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgICAgLnN0YXRlKCdwcm9kdWN0cycsIHtcbiAgICAgICAgICAgIHVybDogJy9wcm9kdWN0cy86aWQvOnR5cGUnLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvUHJvZHVjdHMuaHRtbCdcbiAgICAgICAgfSlcblx0XHQuc3RhdGUoJ3Byb2R1Y3QnLCB7XG4gICAgICAgICAgICB1cmw6ICcvcHJvZHVjdC86aWQnLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvUHJvZHVjdC5odG1sJ1xuICAgICAgICB9KVxuICAgICAgIFxufSlcbi5zZXJ2aWNlKFwiUHJvZHVjdENhdGFsb2dcIixQcm9kdWN0Q2F0YWxvZylcbi5jb250cm9sbGVyKFwiUHJvZHVjdENhdGFsb2dDb250cm9sbGVyXCIsUHJvZHVjdENhdGFsb2dDb250cm9sbGVyKVxuLmNvbnRyb2xsZXIoXCJQcm9kdWN0Q29udHJvbGxlclwiLFByb2R1Y3RDb250cm9sbGVyKTtcbiIsIi8vIEludGlhbGl6aW5nIFF1aXogYXBwXG52YXIgQ2xvdGhpbmdGYXNoaW9uQXBwPWFuZ3VsYXIubW9kdWxlKCdDbG90aGluZ0Zhc2hpb24nLCBbJ3VpLnJvdXRlcicsXG4nQ2xvdGhpbmdGYXNoaW9uQXBwLmhvbWUnLFxuJ0Nsb3RoaW5nRmFzaGlvbkFwcC5DYXRlZ29yaWVzJyxcbidDbG90aGluZ0Zhc2hpb25BcHAuUHJvZHVjdHMnLFxuJ1Nob3BwaW5nQmFza2V0J1xuXSk7XG4vLyBVaSByb3V0ZXIgZm9yIHJvdXRpbmcgdG8gZGlmZmVyZW50IHN0YWdlc1xuQ2xvdGhpbmdGYXNoaW9uQXBwLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG4gICAgXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL2hvbWUnKTtcbiAgICBcbiAgICAkc3RhdGVQcm92aWRlclxuICAgICAgICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICAgICAgICB1cmw6ICcvaG9tZScsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9ob21lLmh0bWwnXG4gICAgICAgIH0pXG4gICAgICBcdCAuc3RhdGUoJ2NhdGVnb3JpZXMnLCB7XG4gICAgICAgICAgICB1cmw6ICcvY2F0ZWdvcmllcy86aWQnLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvY2F0ZWdvcmllcy5odG1sJ1xuICAgICAgICB9KVx0XG4gICAgICAgIFxufSk7XG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==